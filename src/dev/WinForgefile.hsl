#
#                          Copyright (C) 2021 by Rafael Santiago
#
# Use of this source code is governed by GPL-v2 license that can
# be found in the COPYING file.
#
#

include ../build/toolsets.hsl

local var src type list;
local var includes type list;
local var cflags type list;
local var libraries type list;
local var ldflags type list;

project zacarias-sys : toolset "windows-driver" : $src, $includes, $cflags, $libraries, $ldflags, "zacarias.sys";

zacarias-sys.prologue() {
    mklocal("kryptos");

    $src.ls(".*\\.c$");

    var submodules type list;
    $submodules.add_item("defs");
    $submodules.add_item("windows");
    $submodules.add_item("ctx");
    $submodules.add_item("sec");
    $submodules.add_item("kryptos");

    var s type int;
    $s = 0;
    while ($s < $submodules.count()) {
        var sname type string;
        $sname = $submodules.item($s);
        if (hefesto.sys.cd($sname) == 0) {
            hefesto.sys.echo("ERROR: Unable to get " + $sname + " codes.\n");
            hefesto.project.abort(1);
        }
        $src.ls(".*\\.c$");
        hefesto.sys.cd("..");
        $s = $s + 1;
    }

    $includes.add_item(hefesto.sys.pwd());
    $includes.add_item(hefesto.sys.make_path(hefesto.sys.pwd(), "kryptos"));

    $cflags.add_item("-DKRYPTOS_KERNEL_MODE=1");
    $cflags.add_item("-DKRYPTOS_DATA_WIPING_WHEN_FREEING_MEMORY=1");
    $cflags.add_item("-DUSE_LIBCNTPR=1");

    $ldflags.add_item("cng.lib");
    $ldflags.add_item("libcntpr.lib");
}

zacarias-sys.epilogue() {
    if (hefesto.sys.last_forge_result() == 0) {
        copy_win_driver_artifact();
    }
}

local function copy_win_driver_artifact() : result type none {
    var artifact_filepath type string;
    $artifact_filepath = get_msvc_platform() + "\\";

    var option type list;
    $option = hefesto.sys.get_option("compile-model");

    var compile_model type string;
    if ($option.count() > 0) {
        $compile_model = $option.item(0);
    }

    if ($compile_model.len() == 0 || $compile_model == "debug") {
        $artifact_filepath = $artifact_filepath + "debug";
    } else {
        $artifact_filepath = $artifact_filepath + "release";
    }

    $artifact_filepath = hefesto.sys.make_path(hefesto.sys.pwd(), $artifact_filepath + "\\zacarias.sys");

    if (hefesto.sys.cp($artifact_filepath, "zacarias.sys") != 1) {
        hefesto.sys.echo("BUILD ERROR: Unable to copy device driver artifact.\n");
        hefesto.project.abort(1);
    }
}
