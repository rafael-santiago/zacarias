#
#                    Copyright (C) 2020, 2021 by Rafael Santiago
#
# Use of this source code is governed by GPL-v2 license that can
# be found in the COPYING file.
#
#

include ../../build/toolsets.hsl

local var src type list;
local var includes type list;
local var cflags type list;
local var libraries type list;
local var ldflags type list;
local var appname type string;
local var curr_toolset type string;
local var deps type string;

project libc-tests : toolset $curr_toolset : dependencies $deps : $src, $includes, $cflags, $libraries, $ldflags, $appname;

libc-tests.preloading() {
    $curr_toolset = get_app_toolset();
}

libc-tests.prologue() {
    $includes = hefesto.sys.get_option("includes");
    $cflags = hefesto.sys.get_option("cflags");
    $libraries = hefesto.sys.get_option("libraries");
    $ldflags = hefesto.sys.get_option("ldflags");

    if (hefesto.sys.os_name() == "linux") {
        $ldflags.add_item("-ldl");
        $ldflags.add_item("-lpthread");
    } else if (hefesto.sys.os_name() == "freebsd") {
        $ldflags.add_item("-lexecinfo");
        $ldflags.add_item("-lpthread");
    } else if (hefesto.sys.os_name() == "netbsd") {
        $cflags.add_item("-std=c99");
        $ldflags.add_item("-lexecinfo");
        $ldflags.add_item("-lpthread");
    }

    $appname = "libc-tests";
    $src.ls(".*\\.c$");
}

libc-tests.epilogue() {
    if (hefesto.sys.last_forge_result() == 0) {
        if (runtests() != 0) {
            hefesto.project.abort(1);
        }
    }
}

local function runtests() : result type int {
    result hefesto.sys.run(hefesto.sys.make_path(hefesto.sys.make_path(hefesto.sys.pwd(), "bin"), $appname) + " --cutest-leak-check=yes");
}
